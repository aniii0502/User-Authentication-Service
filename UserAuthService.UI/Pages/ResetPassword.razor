@page "/resetpassword"
@inject AuthService AuthService
@inject NavigationManager NavigationManager
@using System.Web

<h3>Reset Password</h3>

@if (string.IsNullOrEmpty(resetModel.Token))
{
    <p class="text-danger">Invalid or missing token.</p>
}
else if (!isSubmitted)
{
    <EditForm Model="resetModel" OnValidSubmit="HandleResetPassword">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div>
            <label>New Password:</label>
            <InputText @bind-Value="resetModel.NewPassword" type="password" />
        </div>
        <div>
            <label>Confirm Password:</label>
            <InputText @bind-Value="resetModel.ConfirmPassword" type="password" />
        </div>

        <button type="submit">Reset Password</button>
    </EditForm>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <p class="text-danger">@errorMessage</p>
    }
}
else
{
    <p>Password has been reset successfully!</p>
    <a href="/login">Login Now</a>
}

@code {
   private ResetPasswordRequest resetModel = new ResetPasswordRequest
    {
        Token = string.Empty,
        NewPassword = string.Empty,
        ConfirmPassword = string.Empty
    };
    private bool isSubmitted = false;
    private string errorMessage = string.Empty;

    [Parameter] public string token { get; set; } = string.Empty;

    protected override void OnInitialized()
    {
        // Prefer route parameter token; fallback to query string
        if (!string.IsNullOrEmpty(token))
        {
            resetModel.Token = token;
        }
        else
        {
            var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
            var query = HttpUtility.ParseQueryString(uri.Query);
            resetModel.Token = query["token"] ?? string.Empty;
        }
    }

    private async Task HandleResetPassword()
    {
        if (string.IsNullOrEmpty(resetModel.NewPassword) || string.IsNullOrEmpty(resetModel.ConfirmPassword))
        {
            errorMessage = "Please fill in all fields.";
            return;
        }

        if (resetModel.NewPassword != resetModel.ConfirmPassword)
        {
            errorMessage = "Passwords do not match.";
            return;
        }

        var success = await AuthService.ResetPassword(resetModel);
        if (success)
        {
            isSubmitted = true;
            errorMessage = string.Empty;
        }
        else
        {
            errorMessage = "Failed to reset password. Please try again.";
        }
    }
}
